# Results

---
title: "5702 project script"
output: html_document
date: "2024-12-08"
---

```{r}
# Load necessary libraries

library(ggplot2)
library(corrplot)
library(dplyr)
library(ggridges)
library(patchwork)
library(reshape2)
library(GGally)
library(tidyr)
library(plotly)
library(sf) 
library(shiny)
```

```{r}
# Load the dataset
data <- read.csv("SLD.csv")
# summary data
summary(data)
```

```{r}
# Transform D1C and D3B to categorical data
data_categorical <- data |>
  mutate(
    D1C_Cat = cut(D1C, breaks = c(-Inf, 0.02, 0.04, 0.06, Inf), labels = c("Low", "Medium", "High", "Very High")),
    D3B_Cat = cut(D3B, breaks = c(-Inf, 0.01, 0.02, 0.03, Inf), labels = c("Low", "Medium", "High", "Very High"))
  )


#head(data_categorical)
```

## 1. Variables distirubution

### (1) histogram for numeric variables

```{r}
num_variables <- c(
  "P_WrkAge", "Pct_AO1", "R_HiWageWk", 
  "D1B", 
  "D3A", "D3AMM", "D3APO", 
  "D4A", 
  "D5AR", 
  "D5CRI"
)


selected_data <- data[num_variables]


data_long <- selected_data %>%
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Value")

# histograms
ggplot(data_long, aes(x = Value)) +
  geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
  facet_wrap(~ Variable, scales = "free_y") +
  labs(title = "Histogram with Density Line for Numerical Variables",
       x = "Value", y = "Density") +
  theme_minimal()

```

1. D1B (Gross population density)
2. D3A (Total road network density)      
3. D3AMM (Multi-modal network density)    
4. D3APO (Pedestrian-oriented network density)      
5. D4A (Distance to nearest transit stop)     
6. D5AR (Jobs within 45 minutes auto travel time)    
7. D5CRI (Regional Centrality Index â€“ Auto)         
8. P_WrkAge (Percent of working-age population)          
9. Pct_AO1 (Percent of one-car households)          
10. R_HiWageWk (Count of high-wage workers earning $3,333/month or more)

Many factors like population density (D1B), road network density (D3A), multi-modal network density (D3AMM), pedestrian infrastructure (D3APO), car ownership (Pct_AO1), and high-wage workers (R_HiWageWk), show that most areas in Manhattan have lower levels, with only a few having much higher values.

Some factors such as the working-age population (P_WrkAge) and regional centrality (D5CRI) are more balanced, with values clustering around the average, suggesting consistency across areas.

However, factors like distance to transit (D4A) and pedestrian-oriented infrastructure (D3APO) show significant disparities, with most areas having limited access and only a few being well-served. This highlights unequal distribution of infrastructure and accessibility across Manhattan.

### (2). ridgeline plot for numerical variables
```{r}
# ridgeline plot 
ggplot(data_long, aes(x = Value, y = Variable)) +
  geom_density_ridges(fill = "skyblue", alpha = 0.7, scale = 0.9, rel_min_height = 0.01) +
  labs(title = "Ridgeline Plot for Numerical Variables",
       x = "Value", y = "Variable") +
  theme_minimal() +
  theme(
    legend.position = "none",  
    axis.text.y = element_text(size = 10),  
    plot.title = element_text(size = 14, face = "bold")  
  )

```


Variables related to transportation infrastructure and accessibility, such as D4A, D3APO, and D3AMM, highlight disparities in urban planning. Many regions in Manhattan lack significant infrastructure, as showed by the skewed distributions.

The Pct_AO1 variable shows a relatively flat distribution, indicating consistent proportions of one-car households across different areas.

### (3). Bar chart for categorical variables

```{r}

data_cat_freq <- data_categorical |>
  count(D1C_Cat, name = "Freq_D1C")
data_cat_freq2 <- data_categorical |>
  count(D3B_Cat, name = "Freq_D3B")

p1 <- data_cat_freq |>
  group_by(D1C_Cat) |>
  summarize(Freq = sum(Freq_D1C)) |>
  ungroup() |>
  ggplot(aes(D1C_Cat, Freq)) +
  labs(
    title = " Bar plot for D1C(Gross employment level)"
  ) +
  geom_col(color = "grey50", fill = "lightblue") +
  theme_minimal(base_size = 10) +  
  theme(
    plot.title = element_text(size = 10, face = "bold")  
  )

p2 <- data_cat_freq2 |>
  group_by(D3B_Cat) |>
  summarize(Freq = sum(Freq_D3B)) |>
  ungroup() |>
  ggplot(aes(D3B_Cat, Freq)) +
  labs(
    title = "Bar plot for D3B(Street intersection density)"
  ) +
  geom_col(color = "grey50", fill = "lightblue") +
  theme_minimal(base_size = 10) +  
  theme(
    plot.title = element_text(size = 10, face = "bold")  
  )


p1 | p2

```

Both variables show the Low level have the highest frequency, indicating that a significant proportion of observations have low values for both D1C_Cat(Gross employment level) and D3B_Cat(Street intersection density).

However, the distribution of D1C_Cat show a sharp decline in frequencies for high level.
In contrast, D3B_Cat has a more balanced distribution among the Medium, High, and Very High categories.

The relatively balanced distribution of D3B_Cat suggests that it might have a broader range of variation across the dataset compared to D1C_Cat.

### (4). jitter graph for relationship between categorical variables
```{r}
# Add jitter plot
ggplot(data_categorical, aes(x = D1C_Cat, y = D3B_Cat)) +
  geom_jitter(width = 0.2, height = 0.2, size = 2, alpha = 0.7) +
  theme_minimal() +
  labs(
    title = "Jitter Plot for categorical variable of D1C and D3B",
    x = "D1C Category: Gross employment density level",
    y = "D3B Category: Street intersection density level"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5)
  )

```

The densest regions tend to follow the diagonal from "Low-Low" to "Very High-Very High." This indicates a positive association between D1C and D3B, where higher values of D1C are often associated with higher values of D3B.


There are still observations in non-diagonal areas. For example:
Some observations in "High" D1C overlap with "Medium" or "Low" D3B.
This suggests that while D1C and D3B are related, the relationship is not perfect, and other factors may influence the distributions.

The density of dots varies across categories. Some categories (eg: "Low" and "Medium") may have more observations, while others (eg:"Very High") are less frequent. This reflect possible real-world imbalances in the data.

### (5). Parallel coordinate plot for all numberical variables (color by categorical variables)

We randomly select 200 sample and do parallel coordinate plot because original dataset is too large

```{r}
set.seed(123)


sampled_data <- data_categorical %>%
  sample_n(200) %>%
  select(D3B_Cat, P_WrkAge, Pct_AO1, R_HiWageWk, D1B, D3A, D3AMM, D3APO, D4A, D5AR)


numeric_vars <- sampled_data %>%
  select(-D3B_Cat)  

data_normalized <- as.data.frame(scale(numeric_vars))


data_normalized <- cbind(sampled_data["D3B_Cat"], data_normalized)


data_long <- data_normalized %>%
  mutate(ID = 1:nrow(data_normalized)) %>%
  pivot_longer(
    cols = -c(ID, D3B_Cat),
    names_to = "Variable",
    values_to = "Value"
  )


ggplot(data_long, aes(x = Variable, y = Value, group = ID, color = D3B_Cat)) +
  geom_line(alpha = 0.6) +
  labs(
    title = "Parallel Coordinate Plot for Randomly Selected 200 Rows",
    x = "Numerical Variables",
    y = "Normalized Value",
    color ="D3B: Street intersection density level"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  
    axis.text.y = element_text(size = 10),                         
    axis.title = element_text(size = 12),                         
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5), 
    legend.title = element_text(size = 8),                       
    legend.text = element_text(size = 8)                          
  )



```

This parallel coordinate plot represents the relationships between multiple normalized numerical variables for 200 randomly selected rows. Each line corresponds to one observation (row), and the colors represent the levels of the categorical variable D3B_Cat (Low, Medium, High, Very High).

Lines from Very High (purple line) generally peak at these variables, suggesting that areas with very high street intersection density level (D3B) values have higher values for transit accessibility and job accessibility.

Red lines generally stay lower, indicating that areas in the "Low" street intersection density level (D3B) are closer to transit stops and have fewer jobs accessible by car.

## 2. Correlation plot with dependent variable: D5CRI (Regional Centrality Index)
### (1).heat map

```{r}


cor_matrix <- cor(selected_data, use = "complete.obs")
cor_melt <- melt(cor_matrix)


ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = round(value, 2)), color = "black", size = 4) +  
  scale_fill_gradient2(
    low = "blue", high = "red", mid = "white",
    midpoint = 0, limit = c(-1, 1), space = "Lab",
    name = "Correlation"
  ) +
  labs(
    title = "Correlation Heatmap of Numerical Variables and Dependent Variable",
    x = "Variables",
    y = "Variables"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 10),
    plot.title = element_text(size = 14, face = "bold")
  )



```

1. Strong Positive Relationships:
Areas that are highly central (D5CRI) tend to have better access to jobs within a 45-minute drive (D5AR).

Places closer to transit stops (D4A) are strongly linked to being more central (D5CRI).

2. Moderate Positive Relationships:
Areas with more working-age residents tend to have more high-wage earners.

Areas with denser road networks also tend to have better multi-modal transportation options like buses or trains.

3. Weak or Minimal Relationships:
Walkable infrastructure (D3APO) shows little connection to most other factors, indicating it operates independently.

4. Negative Relationships:
Areas designed for pedestrians tend to have slightly fewer multi-modal facilities, showing a trade-off in urban planning priorities.

### (2). Scatter plot matrix

```{r,fig.width=10,fig.height=10}



selected_data <- data[num_variables]


selected_data <- selected_data %>%
  mutate(across(everything(), as.numeric))


ggpairs(
  selected_data,
  title = "Scatter Plot Matrix of Numeircal Variables and Dependant Variables ",
  lower = list(continuous = "smooth"),   
  upper = list(continuous = "cor"),      
  diag = list(continuous = "densityDiag") 
)+ 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

From the scatter plot we can see that proximity to jobs, transit stops, and robust transport networks are the strongest drivers of regional centrality, while factors like pedestrian infrastructure or car ownership play a much smaller role.

### (3). Scatter plot for D5AR(Jobs within 45 minutes) and D5CRI(Regional Centrality Index) facet on D1C (Employment level)
```{r,fig.height=8, fig.width=10}



ggplot(data_categorical, aes(x = D5AR, y = D5CRI, color = D1C_Cat)) +
  geom_point(alpha = 0.7) +
  facet_wrap(~D3B_Cat, scales = "fixed") + 
  labs(
    title = "Scatter plot of Jobs within 45 minutes VS Regional Centrality Index by Employment level",
    x = "D5AR(Jobs within 45 minutes)",
    y = "D5CRI: Regional Centrality Index",
    color = "D3B: Street intersection level"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    strip.text.x = element_text(hjust = 1),
    plot.title = element_text(size = 13, face = "bold")
  )


```

Areas with more jobs accessible within 45 minutes tend to be more centrally located, emphasizing the importance of proximity to jobs in urban planning.

The relationship holds across all levels of employment, showing that job access is a universal factor for centrality in Manhattan.

The density of street intersections does not seem to significantly influence the observed relationship in this data.

## 3. Map plot

```{r}

str(data_categorical)
data_trans <- data_categorical

data_trans$geometry <- st_as_sfc(data_trans$geometry, crs = 4326)
data_sf <- st_as_sf(data_trans, sf_column_name = "geometry")

#st_write(data_sf, "manhattan.geojson", driver = "GeoJSON",delete_dsn = TRUE)

#class(data_sf)
# Should include "sf"

#st_geometry_type(data_sf)

```

```{r}

data_sf <- st_cast(data_sf, "MULTIPOLYGON")  

spatial_plot <- ggplot(data = data_sf) +
  geom_sf(aes(fill = D5CRI, text = paste("Regional Centrality Index:", D5CRI)), 
          color = "grey",  
          size = 0.1,      
          alpha = 0.8      
  ) +
  scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Regional Centrality Index") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Map plot for Regional Centrality Index in Manhattan", fill = "D5CRI")


interactive_plot <- ggplotly(spatial_plot, tooltip = "text")  
interactive_plot
```

Result:
In Manhattan, the most centrally located regions generally appear around midtownâ€”near and around the core business districts, transportation hubs, and areas with a dense street network. These midtown neighborhoods, often home to major landmarks, offices, and transit stations, stand out as the most "central" parts of Manhattan according to the map.

User Interactions:
Hover your cursor over regions to see the Regional Centrality Index values in a tooltip.
Zoom in and out or pan around the map to explore different areas more closely.
Use the toolbar in the viewer to reset the view or take screenshots as needed.


```{r}

data_sf <- st_cast(data_sf, "MULTIPOLYGON")  

spatial_plot <- ggplot(data = data_sf) +
  geom_sf(aes(fill = D5AR, text = paste("Jobs within 45 minutes:", D5AR)), 
          color = "grey",  
          size = 0.1,      
          alpha = 0.8      
  ) +
  scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Jobs within 45 minutes") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Map plot for Jobs within 45 minutes in Manhattan", fill = "D5CRI")


interactive_plot <- ggplotly(spatial_plot, tooltip = "text")  
interactive_plot
```

```{r}

vars <- c("P_WrkAge", "Pct_AO1", "R_HiWageWk", "D1B", "D3A", "D3AMM", "D3APO", "D4A", "D5AR")

ui <- fluidPage(
  selectInput("var", "Choose a variable to display:", choices = vars),
  plotOutput("mapPlot")
)

server <- function(input, output) {
  output$mapPlot <- renderPlot({
    ggplot(data = data_sf) +
      geom_sf(aes(fill = get(input$var))) +
      scale_fill_gradient(low = "lightblue", high = "darkblue", name = "Regional Centrality Index") +
      theme_minimal() +
      theme(
      axis.text.x = element_text(angle = 45, hjust = 1)) +
      labs(
        title = "Spatial Plot",
        fill = "Attribute"
      )
  })
}

shinyApp(ui, server)



```


```{r}



```



